[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
includes = ["src"]

[project]
name = "stac-app"
version = "2.0.1"
description = "CRIM implementation of FastAPI application for SpatioTemporal Asset Catalogs (STAC) for bird-house platform."
authors = [
  { name = "Francis Charette-Migneault", email = "francis.charette-migneault@crim.ca" },
  { name = "Mathieu Provencher" },
]
maintainers = [
  { name = "Francis Charette-Migneault", email = "francis.charette-migneault@crim.ca" },
  { name = "Misha Schwartz", email = "mschwa@cs.toronto.edu" },
]
license = { file = "LICENSE" }
keywords = [
    "STAC",
    "SpatioTemporal Asset Catalog",
    "FastAPI",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
]
requires-python = ">=3.10,<4"

dependencies = [
  "packaging==25.0",
  "stac-fastapi.api==6.0.0",
  "stac-fastapi.pgstac[validation]==6.0.0",
  "uvicorn==0.35.0",
]

[project.urls]
repository = "https://github.com/crim-ca/stac-app"
readme = "https://github.com/crim-ca/stac-app/blob/main/README.md"
license = "https://github.com/crim-ca/stac-app/blob/main/LICENSE"

[project.optional-dependencies]
dev = [
    "bump-my-version~=1.2",
    "pre-commit~=4.2",
]

[tool.ruff]
line-length = 120
target-version = "py313"
extend-exclude = [
  ".git",
  "__pycache__",
  "build",
  "dist",
  "env",
  ".idea",
  ".run",
  ".vscode",
  ".venv",
  "venv",
]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "D", "I", "ANN"]
ignore = ["D100", "D104", "D417", "ANN002", "ANN003"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"test/**.py" = ["D", "ANN"]

[tool.bumpversion]
current_version = "2.0.1"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "{new_version}"
allow_dirty = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.dev\\d+)?"
serialize = [
    "{major}.{minor}.{patch}.dev{distance_to_latest_tag}",
    "{major}.{minor}.{patch}"
]
message = "Version updated from {current_version} to {new_version}"

[[tool.bumpversion.files]]
filename = "README.md"

[[tool.bumpversion.files]]
filename = "Makefile"
search = "APP_VERSION ?= {current_version}"
replace = "APP_VERSION ?= {new_version}"

[[tool.bumpversion.files]]
filename = "Dockerfile"
search = "LABEL version=\"{current_version}\""
replace = "LABEL version=\"{new_version}\""

[[tool.bumpversion.files]]
filename = "CHANGES.md"
search = "## [Unreleased](https://github.com/crim-ca/stac-app) (latest)"
replace = """
## [Unreleased](https://github.com/crim-ca/stac-app) (latest)

<!-- insert list items of new changes here -->

## [{new_version}](https://github.com/crim-ca/stac-app/tree/{new_version}) ({now:%Y-%m-%d})
"""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
# ensure the regex does not match another version by mistake using the package name as guide
regex = true
search = "^name = \"stac-app\"\nversion = \"{current_version}\"$"
replace = "name = \"stac-app\"\nversion = \"{new_version}\""
