name: Tests

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    name: Build STAC App Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}

      # make it available for the test job
      - name: Save Docker image as tarball
        run: docker save -o stac-app-image.tar ${{ steps.meta.outputs.tags }}

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: stac-app-image
          path: stac-app-image.tar

    outputs:
      stac-app-docker-tag: ${{ steps.meta.outputs.tags }}

  test-docker:
    name: Test STAC App
    needs: [build-docker]
    runs-on: ubuntu-latest

    services:
      postgres:
        env:
          POSTGRES_PASSWORD: postgres
        image: ghcr.io/stac-utils/pgstac:v0.9.8
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: stac-app-image

      - name: Load Docker image
        run: docker load -i stac-app-image.tar

      - name: Run Test
        run: |
          docker run --rm -d \
            --network host \
            -e PGPASSWORD=postgres \
            -e PGHOST=postgres \
            -e PGDATABASE=postgres \
            -e PGUSER=postgres \
            --name stac-app \
            ${{ needs.build-docker.outputs.stac-app-docker-tag }}
          curl \
            --retry 3 \
            --retry-delay 5 \
            --retry-max-time 30 \
            --retry-connrefused \
            http://localhost:8000/stac \
            | grep '"type":"Catalog","id":"stac-fastapi"'
